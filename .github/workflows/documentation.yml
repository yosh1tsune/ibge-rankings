name: "Documentation Commit"
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  documentation:
    runs-on: ubuntu-latest

    if: github.actor != 'github-actions[bot]' && !contains(github.event.pull_request.title, '[skip ci]')

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Check for Ruby file changes
        id: check-ruby-changes
        run: |
          echo "All changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

          ruby_files=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep '\.rb$' | tr '\n' ' ')

          if [ -n "$ruby_files" ]; then
            echo "ruby_changed=true" >> $GITHUB_OUTPUT
            echo "ruby_files=$ruby_files" >> $GITHUB_OUTPUT
            echo "Ruby files changed: $ruby_files"
          else
            echo "ruby_changed=false" >> $GITHUB_OUTPUT
            echo "ruby_files=" >> $GITHUB_OUTPUT
            echo "No Ruby files were changed"
          fi
      - name: Generate documentation comments with Codex
        if: steps.check-ruby-changes.outputs.ruby_changed == 'true'
        run: |
          npm install -g @openai/codex
          export OPENAI_API_KEY="${{ secrets.OPENAI_KEY }}"
          codex exec --full-auto "Gere comentários de documentação no padrão da gem YARD para os seguintes arquivos Ruby: ${{ steps.check-ruby-changes.outputs.ruby_files }}"
      - name: Generate documentation for changed files
        if: steps.check-ruby-changes.outputs.ruby_changed == 'true'
        run: |
          echo "Ruby files changed: ${{ steps.check-ruby-changes.outputs.ruby_files }}"

          bundle exec yard doc --output-dir doc --incremental

      - name: Check for documentation changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain doc/)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit documentation updates
        if: steps.verify-changed-files.outputs.changed == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          add: 'doc/ ${{ steps.check-ruby-changes.outputs.ruby_files }}'
          message: 'docs: update generated documentation [skip ci]'
          default_author: github_actions
          pathspec_error_handling: ignore
